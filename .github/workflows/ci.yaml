name: CI

on:
  push:
  pull_request:
    branches: [ $default-branch ]
  release:
    types:
      - created
  workflow_dispatch:

jobs:
  ubuntu:
    name: "Ubuntu"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: [24, 25]
        rebar: [3.20.0]
    steps:
    - uses: actions/checkout@v2
    - uses: erlef/setup-beam@v1
      with:
        otp-version: ${{matrix.otp}}
        rebar3-version: ${{matrix.rebar}}
    - name: Format check
      env:
        ERL_FLAGS: "-enable-feature all"
      run: rebar3 format --verify
    - name: Tests
      env:
        ERL_FLAGS: "-enable-feature all"
      run: env DIAGNOSTIC=1 rebar3 test
    - name: Integration tests
      env:
        ERL_FLAGS: "-enable-feature all"
      run: |
        REPO=$PWD
        rebar3 new lib mylib
        cat >> mylib/rebar.config <<EOF

        {project_plugins, [{rebar3_edoc_extensions, {git, "file://$REPO", {ref, "HEAD"}}}]}.
        EOF
        cat mylib/rebar.config

        cd mylib
        rebar3 edoc

        echo "Checking the files created by the plugin are present"
        test -f doc/index.html
        test -f doc/prism.js
        test -f doc/prism.css
        test -f doc/github-markdown.css

        echo "Checking HTML files were patched by the plugin"
        grep -q prism.js doc/overview-summary.html
        grep -q prism.js doc/modules-frame.html

  windows:
    name: "Windows"
    runs-on: windows-latest
    strategy:
      matrix:
        otp: [23, 24, 25]
        rebar: [3.18.0]
    steps:
    - uses: actions/checkout@v2
    - uses: erlef/setup-beam@v1
      with:
        otp-version: ${{matrix.otp}}
        rebar3-version: ${{matrix.rebar}}
    - name: Tests
      env:
        ERL_FLAGS: "-enable-feature all"
      run: rebar3 test
